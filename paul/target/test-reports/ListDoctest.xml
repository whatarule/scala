<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="wkUb64x" name="ListDoctest" tests="35" errors="0" failures="1" skipped="0" time="0.744">
                     <properties>
      <property name="jline.esc.timeout" value="0"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64"/><property name="java.vm.version" value="25.131-b11"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="java.vendor.url" value="http://java.oracle.com/"/><property name="path.separator" value=":"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="file.encoding.pkg" value="sun.io"/><property name="user.country" value="US"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="sun.os.patch.level" value="unknown"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="user.dir" value="/home/wk/scala/paul"/><property name="java.runtime.version" value="1.8.0_131-8u131-b11-2ubuntu1.16.04.3-b11"/><property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/><property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed"/><property name="os.arch" value="amd64"/><property name="java.io.tmpdir" value="/tmp"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="os.name" value="Linux"/><property name="sun.jnu.encoding" value="UTF-8"/><property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.class.version" value="52.0"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="os.version" value="4.4.0-64-generic"/><property name="user.home" value="/home/wk"/><property name="user.timezone" value="Asia/Tokyo"/><property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/><property name="file.encoding" value="UTF-8"/><property name="java.specification.version" value="1.8"/><property name="java.class.path" value="/usr/share/sbt/bin/sbt-launch.jar"/><property name="user.name" value="wk"/><property name="jline.shutdownhook" value="false"/><property name="java.vm.specification.version" value="1.8"/><property name="sun.java.command" value="/usr/share/sbt/bin/sbt-launch.jar"/><property name="java.home" value="/usr/lib/jvm/java-8-openjdk-amd64/jre"/><property name="sun.arch.data.model" value="64"/><property name="user.language" value="en"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="awt.toolkit" value="sun.awt.X11.XToolkit"/><property name="java.vm.info" value="mixed mode"/><property name="java.version" value="1.8.0_131"/><property name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"/><property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes"/><property name="java.vendor" value="Oracle Corporation"/><property name="file.separator" value="/"/><property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="sun.cpu.endian" value="little"/><property name="sun.cpu.isalist" value=""/>
    </properties>
                     <testcase classname="ListDoctest" name="tail(List(1,2,3))" time="0.357">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="Nil)" time="0.002">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="setHead(0,List(1,2,3))" time="0.002">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="Nil)" time="0.002">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="drop(2, List(1,2,3))" time="0.001">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="drop(3, List(1,2,3))" time="0.001">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="drop(4, List(1,2,3))" time="0.002">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="dropWhile((x: Int) =&gt; x &lt; 3)(List(1,2,3))" time="0.016">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="dropWhile((x: Int) =&gt; x &lt; 4)(List(1,2,3))" time="0.006">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="_dropWhile(List(1,2,3))(x =&gt; x &lt; 3)" time="0.013">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="append(List(1,2), List(3))" time="0.003">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="init(List(1,2,3))" time="0.028">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="sumF(List(1,2,3))" time="0.008">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="productF(List(0,1,2))" time="0.009">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="lengthF(List(1,2,3))" time="0.005">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="add, 0)(List(1,2,3))" time="0.01">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="sum(List(0,1,2))" time="0.004">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="product(List(0,1,2))" time="0.004">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="length(List(0,1,2))" time="0.004">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="Nil)" time="0.001">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="Nil,1)" time="0.001">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="scala:207: fixT example at line 208: List(1,2,&quot;3&quot;)" time="0.002">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="reverse(List(1,2,3))" time="0.011">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="_reverse(List(1,2,3))" time="0.004">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="scala:242: add2 example at line 244: (curry(add)(2) compose curry(add)(3))(2)" time="0.017">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="scala:242: add2 example at line 248: (add2(1) compose add2(1))(2)" time="0.01">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="scala:257: foldRightL example at line 259: foldRightL(add, 0)(List(0,1,2))" time="0.004">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="appendF(List(0,1), List(2))" time="0.008">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="joinList(List(List(0,1), List(2), List(3,4)))" time="0.007">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="incrementM(List(0,1,2))" time="0.007">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="stringM(List(0,1,2))" time="0.006">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="scala:300: map example at line 302: map(add2(1), List(0,1,2))" time="0.005">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="even(2)" time="0.001">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="even(1)" time="0.001">
                                                 
                                               </testcase><testcase classname="ListDoctest" name="scala:309: filter example at line 317: filter(even, List(0,1,2))" time="0.182">
                                                 <failure message="&quot;[Cons(0,Cons(2,Nil))]&quot; did not equal &quot;[1]&quot;" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: &quot;[Cons(0,Cons(2,Nil))]&quot; did not equal &quot;[1]&quot;
	at org.scalatest.MatchersHelper$.indicateFailure(MatchersHelper.scala:340)
	at org.scalatest.Matchers$ShouldMethodHelper$.shouldMatcher(Matchers.scala:6668)
	at org.scalatest.Matchers$AnyShouldWrapper.should(Matchers.scala:6716)
	at ListDoctest.$anonfun$new$66(ListDoctest.scala:210)
	at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSpecLike$$anon$1.apply(FunSpecLike.scala:454)
	at org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
	at org.scalatest.FunSpec.withFixture(FunSpec.scala:1630)
	at org.scalatest.FunSpecLike.invokeWithFixture$1(FunSpecLike.scala:452)
	at org.scalatest.FunSpecLike.$anonfun$runTest$1(FunSpecLike.scala:464)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSpecLike.runTest(FunSpecLike.scala:464)
	at org.scalatest.FunSpecLike.runTest$(FunSpecLike.scala:446)
	at org.scalatest.FunSpec.runTest(FunSpec.scala:1630)
	at org.scalatest.FunSpecLike.$anonfun$runTests$1(FunSpecLike.scala:497)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:396)
	at scala.collection.immutable.List.foreach(List.scala:389)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:373)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:410)
	at scala.collection.immutable.List.foreach(List.scala:389)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSpecLike.runTests(FunSpecLike.scala:497)
	at org.scalatest.FunSpecLike.runTests$(FunSpecLike.scala:496)
	at org.scalatest.FunSpec.runTests(FunSpec.scala:1630)
	at org.scalatest.Suite.run(Suite.scala:1147)
	at org.scalatest.Suite.run$(Suite.scala:1129)
	at org.scalatest.FunSpec.org$scalatest$FunSpecLike$$super$run(FunSpec.scala:1630)
	at org.scalatest.FunSpecLike.$anonfun$run$1(FunSpecLike.scala:501)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSpecLike.run(FunSpecLike.scala:501)
	at org.scalatest.FunSpecLike.run$(FunSpecLike.scala:500)
	at org.scalatest.FunSpec.run(FunSpec.scala:1630)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507)
	at sbt.TestRunner.runTest$1(TestFramework.scala:102)
	at sbt.TestRunner.run(TestFramework.scala:113)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:258)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:229)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:258)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:258)
	at sbt.TestFunction.apply(TestFramework.scala:267)
	at sbt.Tests$.$anonfun$toTask$1(Tests.scala:276)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:44)
	at sbt.std.Transform$$anon$4.work(System.scala:64)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:257)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:266)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:257)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:167)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:32)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
</failure>
                                               </testcase>
                     <system-out><![CDATA[]]></system-out>
                     <system-err><![CDATA[]]></system-err>
                   </testsuite>